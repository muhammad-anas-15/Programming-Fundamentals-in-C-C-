Vectors in C++: 
               *** Vectors are used to store elements of similar data types. However, unlike arrays, the size of a vector can grow dynamically.
               *** We can change the size of the vector during the execution of a program as per our requirements. 
               *** Vectors are part of the C++ Standard Template Library. 

 Syntax:
            To use vectors, we need to include the vector header file in our program.
   --> 
            #include <vector>

 1) Vector Declaration:
                      vector<T> vector_name;
  The type parameter <T> specifies the type of the vector. It can be any primitive data type such as int, char, float, etc. 

 Example:
         vector<int> num; // Here, num is the name of the vector.

2)  Vector Initialization:

 --> Method 1:
          // Initializer list
          vector<int> vector1 = {1, 2, 3, 4, 5};

 --> Method 2:
              vector<int> vector3(5, 12); // Here, 5 is the size of the vector and 12 is the value.
  This code creates an int vector with size 5 and initializes the vector with the value of 12. So, the vector is equivalent to
                                     vector<int> vector3 = {12, 12, 12, 12, 12};


 Example:
         
#include <iostream>
#include <vector>
using namespace std;

int main() {

  // initializer list
  vector<int> vector1 = {1, 2, 3, 4, 5};

  // uniform initialization
  vector<int> vector2{6, 7, 8, 9, 10};

  // method 3
  vector<int> vector3(5, 12);

  cout << "vector1 = ";

  // ranged loop
  for (const int& i : vector1) {
    cout << i << "  ";
  }

  cout << "\nvector2 = ";

  // ranged loop
  for (const int& i : vector2) {
    cout << i << "  ";
  }

  cout << "\nvector3 = ";

  // ranged loop
  for (int i : vector3) {
    cout << i << "  ";
  }

  return 0;
}

Output

vector1 = 1  2  3  4  5  
vector2 = 6  7  8  9  10  
vector3 = 12  12  12  12  12 

more on https://www.programiz.com/cpp-programming/vectors.